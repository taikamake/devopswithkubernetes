name: Release application

on:
  push:

env:
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  APP_IMAGE: todo-app
  BACKEND_IMAGE: todo-backend
  APP_DEPLOYMENT: todo-app
  BACKEND_DEPLOYMENT: todo-backend

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest
    environment: project

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set PROJECT_ID
        run: echo "PROJECT_ID=${{ secrets.GKE_PROJECT }}" >> $GITHUB_ENV

      - name: Set BRANCH
        run: |-
          if [ "${GITHUB_REF#refs/heads/}" = "main" ]; then
            echo "BRANCH=default" >> $GITHUB_ENV
          else
            echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud --quiet auth configure-docker

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Build and publish
        run: |-
          cd part3/exercise4
          docker build --tag "gcr.io/$PROJECT_ID/$APP_IMAGE:$BRANCH-$GITHUB_SHA" todo-app
          docker push "gcr.io/$PROJECT_ID/$APP_IMAGE:$BRANCH-$GITHUB_SHA"
          docker build --tag "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$BRANCH-$GITHUB_SHA" todo-backend
          docker push "gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$BRANCH-$GITHUB_SHA"

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Deploy
        run: |-
          cd part3/exercise4
          kubectl create namespace $BRANCH || true
          kubectl config set-context --current --namespace=$BRANCH
          echo "${{ secrets.GKE_POSTGRE }}" > secret.yaml
          kubectl apply -f secret.yaml
          kustomize edit set namespace $BRANCH
          kustomize edit set image APP/IMAGE=gcr.io/$PROJECT_ID/$APP_IMAGE:$BRANCH-$GITHUB_SHA
          kustomize edit set image BACKEND/IMAGE=gcr.io/$PROJECT_ID/$BACKEND_IMAGE:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment $APP_DEPLOYMENT
          kubectl rollout status deployment $BACKEND_DEPLOYMENT
          kubectl get services -o wide